/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.analysis;

import java.util.*;
import postfix.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgrammeProgramme(AProgrammeProgramme node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOuExp(AOuExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp1Exp(AExp1Exp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEtExp1(AEtExp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp2Exp1(AExp2Exp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEqualExp2(AEqualExp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInfExp2(AInfExp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp3Exp2(AExp3Exp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusExp3(APlusExp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubExp3(ASubExp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp4Exp3(AExp4Exp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultExp4(AMultExp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivExp4(ADivExp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp5Exp4(AExp5Exp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonExp5(ANonExp5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp6Exp5(AExp6Exp5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParenteseExp6(AParenteseExp6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumberExp6(ANumberExp6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVraiExp6(AVraiExp6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFauxExp6(AFauxExp6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariableExp6(AVariableExp6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAppelfoncExp6(AAppelfoncExp6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALireExp6(ALireExp6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAppelfonctionAppelfonc(AAppelfonctionAppelfonc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAfectationInstr(AAfectationInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATantqueInstr(ATantqueInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFonctionInstr(AFonctionInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASiInstr(ASiInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASinonInstr(ASinonInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetourInstr(ARetourInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEcrireInstr(AEcrireInstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListedinstrInstrbloc(AListedinstrInstrbloc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListdeinstrListeinstr(AListdeinstrListeinstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEpsilonListeinstr(AEpsilonListeinstr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListedeexpressionListeexp(AListedeexpressionListeexp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEpsilonListeexp(AEpsilonListeexp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARestelistedeexpressionListeexpbis(ARestelistedeexpressionListeexpbis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEpsilonListeexpbis(AEpsilonListeexpbis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdentifVar(AIdentifVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarindexeeVar(AVarindexeeVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclarationvarDecvar(ADeclarationvarDecvar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclarationvarindexeeDecvar(ADeclarationvarindexeeDecvar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEntierType(AEntierType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolType(ABoolType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclarationfonctionDecfonc(ADeclarationfonctionDecfonc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATypeOpttype(ATypeOpttype node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEpsilonOpttype(AEpsilonOpttype node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListedecvarListedecvar(AListedecvarListedecvar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEpsilonListedecvar(AEpsilonListedecvar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAApreslistedecvarListedecvarbis(AApreslistedecvarListedecvarbis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEpsilonListedecvarbis(AEpsilonListedecvarbis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListedecfoncListedecfonc(AListedecfoncListedecfonc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEpsilonListedecfonc(AEpsilonListedecfonc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEspaces(TEspaces node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommentaire(TCommentaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLAccolade(TLAccolade node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRAccolade(TRAccolade node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNon(TNon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVrai(TVrai node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaux(TFaux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEqual(TEqual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLess(TLess node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEt(TEt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTHuit(TTHuit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSautDeLigne(TSautDeLigne node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPointVirgule(TPointVirgule node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBrackopen(TBrackopen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBrackclose(TBrackclose node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemicol(TSemicol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgule(TVirgule node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRetour(TRetour node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLire(TLire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEcrire(TEcrire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSi(TSi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSinon(TSinon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAlors(TAlors node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTantque(TTantque node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaire(TFaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntier(TEntier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBool(TBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentif(TIdentif node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
