/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class ADeclarationfonctionDecfonc extends PDecfonc
{
    private POpttype _opttype_;
    private TIdentif _identif_;
    private TLPar _lPar_;
    private PParametre _parametre_;
    private TRPar _rPar_;
    private PListedecvar _listedecvar_;
    private PInstrbloc _instrbloc_;

    public ADeclarationfonctionDecfonc()
    {
        // Constructor
    }

    public ADeclarationfonctionDecfonc(
        @SuppressWarnings("hiding") POpttype _opttype_,
        @SuppressWarnings("hiding") TIdentif _identif_,
        @SuppressWarnings("hiding") TLPar _lPar_,
        @SuppressWarnings("hiding") PParametre _parametre_,
        @SuppressWarnings("hiding") TRPar _rPar_,
        @SuppressWarnings("hiding") PListedecvar _listedecvar_,
        @SuppressWarnings("hiding") PInstrbloc _instrbloc_)
    {
        // Constructor
        setOpttype(_opttype_);

        setIdentif(_identif_);

        setLPar(_lPar_);

        setParametre(_parametre_);

        setRPar(_rPar_);

        setListedecvar(_listedecvar_);

        setInstrbloc(_instrbloc_);

    }

    @Override
    public Object clone()
    {
        return new ADeclarationfonctionDecfonc(
            cloneNode(this._opttype_),
            cloneNode(this._identif_),
            cloneNode(this._lPar_),
            cloneNode(this._parametre_),
            cloneNode(this._rPar_),
            cloneNode(this._listedecvar_),
            cloneNode(this._instrbloc_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADeclarationfonctionDecfonc(this);
    }

    public POpttype getOpttype()
    {
        return this._opttype_;
    }

    public void setOpttype(POpttype node)
    {
        if(this._opttype_ != null)
        {
            this._opttype_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opttype_ = node;
    }

    public TIdentif getIdentif()
    {
        return this._identif_;
    }

    public void setIdentif(TIdentif node)
    {
        if(this._identif_ != null)
        {
            this._identif_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identif_ = node;
    }

    public TLPar getLPar()
    {
        return this._lPar_;
    }

    public void setLPar(TLPar node)
    {
        if(this._lPar_ != null)
        {
            this._lPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lPar_ = node;
    }

    public PParametre getParametre()
    {
        return this._parametre_;
    }

    public void setParametre(PParametre node)
    {
        if(this._parametre_ != null)
        {
            this._parametre_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parametre_ = node;
    }

    public TRPar getRPar()
    {
        return this._rPar_;
    }

    public void setRPar(TRPar node)
    {
        if(this._rPar_ != null)
        {
            this._rPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rPar_ = node;
    }

    public PListedecvar getListedecvar()
    {
        return this._listedecvar_;
    }

    public void setListedecvar(PListedecvar node)
    {
        if(this._listedecvar_ != null)
        {
            this._listedecvar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listedecvar_ = node;
    }

    public PInstrbloc getInstrbloc()
    {
        return this._instrbloc_;
    }

    public void setInstrbloc(PInstrbloc node)
    {
        if(this._instrbloc_ != null)
        {
            this._instrbloc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._instrbloc_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._opttype_)
            + toString(this._identif_)
            + toString(this._lPar_)
            + toString(this._parametre_)
            + toString(this._rPar_)
            + toString(this._listedecvar_)
            + toString(this._instrbloc_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._opttype_ == child)
        {
            this._opttype_ = null;
            return;
        }

        if(this._identif_ == child)
        {
            this._identif_ = null;
            return;
        }

        if(this._lPar_ == child)
        {
            this._lPar_ = null;
            return;
        }

        if(this._parametre_ == child)
        {
            this._parametre_ = null;
            return;
        }

        if(this._rPar_ == child)
        {
            this._rPar_ = null;
            return;
        }

        if(this._listedecvar_ == child)
        {
            this._listedecvar_ = null;
            return;
        }

        if(this._instrbloc_ == child)
        {
            this._instrbloc_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._opttype_ == oldChild)
        {
            setOpttype((POpttype) newChild);
            return;
        }

        if(this._identif_ == oldChild)
        {
            setIdentif((TIdentif) newChild);
            return;
        }

        if(this._lPar_ == oldChild)
        {
            setLPar((TLPar) newChild);
            return;
        }

        if(this._parametre_ == oldChild)
        {
            setParametre((PParametre) newChild);
            return;
        }

        if(this._rPar_ == oldChild)
        {
            setRPar((TRPar) newChild);
            return;
        }

        if(this._listedecvar_ == oldChild)
        {
            setListedecvar((PListedecvar) newChild);
            return;
        }

        if(this._instrbloc_ == oldChild)
        {
            setInstrbloc((PInstrbloc) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
