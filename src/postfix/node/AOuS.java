/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class AOuS extends PS
{
    private PS _s_;
    private TOu _ou_;
    private PO _o_;

    public AOuS()
    {
        // Constructor
    }

    public AOuS(
        @SuppressWarnings("hiding") PS _s_,
        @SuppressWarnings("hiding") TOu _ou_,
        @SuppressWarnings("hiding") PO _o_)
    {
        // Constructor
        setS(_s_);

        setOu(_ou_);

        setO(_o_);

    }

    @Override
    public Object clone()
    {
        return new AOuS(
            cloneNode(this._s_),
            cloneNode(this._ou_),
            cloneNode(this._o_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOuS(this);
    }

    public PS getS()
    {
        return this._s_;
    }

    public void setS(PS node)
    {
        if(this._s_ != null)
        {
            this._s_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._s_ = node;
    }

    public TOu getOu()
    {
        return this._ou_;
    }

    public void setOu(TOu node)
    {
        if(this._ou_ != null)
        {
            this._ou_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ou_ = node;
    }

    public PO getO()
    {
        return this._o_;
    }

    public void setO(PO node)
    {
        if(this._o_ != null)
        {
            this._o_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._o_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._s_)
            + toString(this._ou_)
            + toString(this._o_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._s_ == child)
        {
            this._s_ = null;
            return;
        }

        if(this._ou_ == child)
        {
            this._ou_ = null;
            return;
        }

        if(this._o_ == child)
        {
            this._o_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._s_ == oldChild)
        {
            setS((PS) newChild);
            return;
        }

        if(this._ou_ == oldChild)
        {
            setOu((TOu) newChild);
            return;
        }

        if(this._o_ == oldChild)
        {
            setO((PO) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
